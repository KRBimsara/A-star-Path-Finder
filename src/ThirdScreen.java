/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dilumdesilva
 */
public class ThirdScreen extends javax.swing.JFrame {
    
    private int selectedGridSize = 0;
    private int MapType = 0;
    private char distanceMetricsType;
    

    /**
     * Creates new form gSelectionScreen
     */
    public ThirdScreen() {
        initComponents();
        
        //making unselected all the radio buttins at the begining.
        radioButton20.setSelected(false);
        radioButton40.setSelected(false);
        radioButton80.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnGenerateMap = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblGrid20 = new javax.swing.JLabel();
        lblGrid40 = new javax.swing.JLabel();
        lblGrid80 = new javax.swing.JLabel();
        radioButton20 = new javax.swing.JRadioButton();
        radioButton40 = new javax.swing.JRadioButton();
        radioButton80 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(13, 127, 137));

        btnGenerateMap.setBackground(new java.awt.Color(255, 255, 255));
        btnGenerateMap.setFont(new java.awt.Font("Roboto", 1, 25)); // NOI18N
        btnGenerateMap.setForeground(new java.awt.Color(13, 127, 137));
        btnGenerateMap.setText("Generate");
        btnGenerateMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateMapActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Please select the grid size of your map");

        lblGrid20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gridPic.png"))); // NOI18N

        lblGrid40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/grid80.png"))); // NOI18N

        lblGrid80.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/grid80.png"))); // NOI18N

        radioButton20.setForeground(new java.awt.Color(255, 255, 255));
        radioButton20.setText("20x20 Grid");
        radioButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton20ActionPerformed(evt);
            }
        });

        radioButton40.setForeground(new java.awt.Color(255, 255, 255));
        radioButton40.setText("40x40 Grid");
        radioButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton40ActionPerformed(evt);
            }
        });

        radioButton80.setForeground(new java.awt.Color(255, 255, 255));
        radioButton80.setText("80x80 Grid");
        radioButton80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton80ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(radioButton20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radioButton40)
                .addGap(143, 143, 143)
                .addComponent(radioButton80)
                .addGap(107, 107, 107))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(lblGrid20)
                        .addGap(27, 27, 27)
                        .addComponent(lblGrid40)
                        .addGap(32, 32, 32)
                        .addComponent(lblGrid80))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(btnGenerateMap, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGrid40)
                            .addComponent(lblGrid80)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(lblGrid20)))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButton20)
                    .addComponent(radioButton80)
                    .addComponent(radioButton40))
                .addGap(64, 64, 64)
                .addComponent(btnGenerateMap)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateMapActionPerformed
        this.dispose();    
        sendUserSelections();  
    }//GEN-LAST:event_btnGenerateMapActionPerformed

    private void radioButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton20ActionPerformed
        // once user selects 20x20 gird:
        if (radioButton20.isSelected()) {
            System.out.println("User has selected 20x20 grid");
            //once user selcted the 20x20 I am setting to false the other two grid size relted radio buttons
            radioButton40.setSelected(false);
            radioButton80.setSelected(false);
            
            setSelectedGridSize(20);
        }
    }//GEN-LAST:event_radioButton20ActionPerformed

    private void radioButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton40ActionPerformed
        // once user selects 40x40 gird:
        if (radioButton40.isSelected()) {
            System.out.println("User has selected 40x40 grid");
            //once user selcted the 40x40 I am setting to false the other two grid size relted radio buttons
            radioButton20.setSelected(false);
            radioButton80.setSelected(false);
            
            setSelectedGridSize(40);
        }
    }//GEN-LAST:event_radioButton40ActionPerformed

    private void radioButton80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton80ActionPerformed
        // once user selects 80x80 gird:
        if (radioButton80.isSelected()) {
            System.out.println("User has selected 80x80 grid");
            //once user selcted the 80x80 I am setting to false the other two grid size relted radio buttons
            radioButton20.setSelected(false);
            radioButton40.setSelected(false);
            
            setSelectedGridSize(80);
        }
    }//GEN-LAST:event_radioButton80ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                new ThirdScreen().setVisible(true);
            }
        });
        
        
    }
    
    
    
    private void sendUserSelections(){
       PathFinder objPathFinder = new PathFinder();
       objPathFinder.pathFindertMain(MapType, selectedGridSize, distanceMetricsType);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateMap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblGrid20;
    private javax.swing.JLabel lblGrid40;
    private javax.swing.JLabel lblGrid80;
    private javax.swing.JRadioButton radioButton20;
    private javax.swing.JRadioButton radioButton40;
    private javax.swing.JRadioButton radioButton80;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the MapType
     */
    public int getMapType() {
        return MapType;
    }

    /**
     * @param MapType the MapType to set
     */
    public void setMapType(int MapType) {
        this.MapType = MapType;
    }

    /**
     * @return the selectedGridSize
     */
    public int getSelectedGridSize() {
        return selectedGridSize;
    }

    /**
     * @param selectedGridSize the selectedGridSize to set
     */
    public void setSelectedGridSize(int selectedGridSize) {
        this.selectedGridSize = selectedGridSize;
    }
    
    /**
     * @return the distanceMetricsType
     */
    public char getDistanceMetricsType() {
        return distanceMetricsType;
    }

    /**
     * @param distanceMetricsType the distanceMetricsType to set
     */
    public void setDistanceMetricsType(char distanceMetricsType) {
        this.distanceMetricsType = distanceMetricsType;
    }

    
}
